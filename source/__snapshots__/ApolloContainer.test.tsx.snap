// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components ApolloContainer renders correctly with defaults 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ApolloContainer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <UNDEFINED>
        <UNDEFINED
          uriPrefix="myapp://"
        />
      </UNDEFINED>,
      "client": ApolloClient {
        "cache": Object {
          "diff": [Function],
          "evict": [Function],
          "performTransaction": [Function],
          "read": [Function],
          "readFragment": [Function],
          "readQuery": [Function],
          "recordOptimisticTransaction": [Function],
          "removeOptimistic": [Function],
          "reset": [Function],
          "transformDocument": [Function],
          "watch": [Function],
          "write": [Function],
          "writeFragment": [Function],
          "writeQuery": [Function],
        },
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "ssrMode": false,
        "store": DataStore {
          "cache": Object {
            "diff": [Function],
            "evict": [Function],
            "performTransaction": [Function],
            "read": [Function],
            "readFragment": [Function],
            "readQuery": [Function],
            "recordOptimisticTransaction": [Function],
            "removeOptimistic": [Function],
            "reset": [Function],
            "transformDocument": [Function],
            "watch": [Function],
            "write": [Function],
            "writeFragment": [Function],
            "writeQuery": [Function],
          },
        },
        "version": "2.4.2",
        "watchQuery": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <UNDEFINED
          uriPrefix="myapp://"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "uriPrefix": "myapp://",
        },
        "ref": null,
        "rendered": null,
        "type": undefined,
      },
      "type": undefined,
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <UNDEFINED>
          <UNDEFINED
            uriPrefix="myapp://"
          />
        </UNDEFINED>,
        "client": ApolloClient {
          "cache": Object {
            "diff": [Function],
            "evict": [Function],
            "performTransaction": [Function],
            "read": [Function],
            "readFragment": [Function],
            "readQuery": [Function],
            "recordOptimisticTransaction": [Function],
            "removeOptimistic": [Function],
            "reset": [Function],
            "transformDocument": [Function],
            "watch": [Function],
            "write": [Function],
            "writeFragment": [Function],
            "writeQuery": [Function],
          },
          "defaultOptions": Object {},
          "disableNetworkFetches": false,
          "link": ApolloLink {
            "request": [Function],
          },
          "mutate": [Function],
          "query": [Function],
          "queryDeduplication": true,
          "reFetchObservableQueries": [Function],
          "resetStore": [Function],
          "resetStoreCallbacks": Array [],
          "ssrMode": false,
          "store": DataStore {
            "cache": Object {
              "diff": [Function],
              "evict": [Function],
              "performTransaction": [Function],
              "read": [Function],
              "readFragment": [Function],
              "readQuery": [Function],
              "recordOptimisticTransaction": [Function],
              "removeOptimistic": [Function],
              "reset": [Function],
              "transformDocument": [Function],
              "watch": [Function],
              "write": [Function],
              "writeFragment": [Function],
              "writeQuery": [Function],
            },
          },
          "version": "2.4.2",
          "watchQuery": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <UNDEFINED
            uriPrefix="myapp://"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "uriPrefix": "myapp://",
          },
          "ref": null,
          "rendered": null,
          "type": undefined,
        },
        "type": undefined,
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
