// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components CrossButton With title should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CrossButton
    iconName="home"
    onPress={[MockFunction]}
    title="home"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <UNDEFINED
        iconName="home"
        mode="contained"
        onPress={[Function]}
        style={
          Object {
            "height": 45,
            "marginBottom": 10,
            "marginRight": 10,
            "marginTop": 10,
          }
        }
        title="home"
      >
        home
      </UNDEFINED>,
      "style": Object {
        "flex": 1,
        "justifyContent": "space-between",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "home",
        "color": undefined,
        "iconName": "home",
        "mode": "contained",
        "onPress": [Function],
        "style": Object {
          "height": 45,
          "marginBottom": 10,
          "marginRight": 10,
          "marginTop": 10,
        },
        "title": "home",
      },
      "ref": null,
      "rendered": "home",
      "type": undefined,
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <UNDEFINED
          iconName="home"
          mode="contained"
          onPress={[Function]}
          style={
            Object {
              "height": 45,
              "marginBottom": 10,
              "marginRight": 10,
              "marginTop": 10,
            }
          }
          title="home"
        >
          home
        </UNDEFINED>,
        "style": Object {
          "flex": 1,
          "justifyContent": "space-between",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "home",
          "color": undefined,
          "iconName": "home",
          "mode": "contained",
          "onPress": [Function],
          "style": Object {
            "height": 45,
            "marginBottom": 10,
            "marginRight": 10,
            "marginTop": 10,
          },
          "title": "home",
        },
        "ref": null,
        "rendered": "home",
        "type": undefined,
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`components CrossButton Without title should renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CrossButton
    iconName="map"
    onPress={[MockFunction]}
    title={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <View
        iconName="map"
        name="map"
        onPress={[Function]}
        reverse={true}
        title={null}
        type="font-awesome"
      />,
      "style": Object {
        "flex": 1,
        "justifyContent": "space-between",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "color": undefined,
        "iconName": "map",
        "name": "map",
        "onPress": [Function],
        "reverse": true,
        "title": null,
        "type": "font-awesome",
      },
      "ref": null,
      "rendered": null,
      "type": "View",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <View
          iconName="map"
          name="map"
          onPress={[Function]}
          reverse={true}
          title={null}
          type="font-awesome"
        />,
        "style": Object {
          "flex": 1,
          "justifyContent": "space-between",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "color": undefined,
          "iconName": "map",
          "name": "map",
          "onPress": [Function],
          "reverse": true,
          "title": null,
          "type": "font-awesome",
        },
        "ref": null,
        "rendered": null,
        "type": "View",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
